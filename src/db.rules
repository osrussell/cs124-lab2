rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

  // various working functions to check usability
	  function signedIn() {
      return request.auth.uid != null;
    }

    function isDocOwner() {
      return request.auth.token.email == resource.data.owner;
    }

    function updatedDocHasCorrectOwner() {
      return request.auth.token.email == request.resource.data.owner;
    }

    function updatedDocHasSameOwner() {
      return resource.data.owner == request.resource.data.owner;
    }

    function updatedDocSharingStillHasOwner() {
      return resource.data.owner in request.resource.data.shared;
    }

    function isSharedWithMe() {
      return request.auth.token.email in resource.data.shared;
    }






    match /listsAuth/{name} {
      allow read: if signedIn() && isSharedWithMe();
      allow create: if signedIn() && updatedDocHasCorrectOwner();
      allow update: if signedIn() && isSharedWithMe() && updatedDocHasSameOwner() && updatedDocSharingStillHasOwner();
      allow delete: if signedIn() && isDocOwner();

      match /tasks/{task} {
      	function getIsSharedWithMe() {
      		return request.auth.token.email in get(/databases/$(database)/documents/listsAuth/$(name)).data.shared;
    		}


        // checks if we are even checkign a task atm
      	allow read, write : if signedIn() &&
        	                   ((name == "no list yet") || getIsSharedWithMe());

    }
    }




  }
}